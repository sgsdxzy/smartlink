# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: smartlink/link.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='smartlink/link.proto',
  package='',
  syntax='proto3',
  serialized_pb=_b('\n\x14smartlink/link.proto\"\x86\x01\n\x04Link\x12\x18\n\x04type\x18\x01 \x01(\x0e\x32\n.Link.Type\x12\n\n\x02id\x18\x02 \x01(\r\x12\x0c\n\x04name\x18\x03 \x01(\t\x12\r\n\x05group\x18\x04 \x01(\t\x12\x0c\n\x04sigs\x18\x05 \x03(\t\x12\x0c\n\x04\x61rgs\x18\x06 \x03(\t\"\x1f\n\x04Type\x12\n\n\x06UPDATE\x10\x00\x12\x0b\n\x07\x43OMMAND\x10\x01\"L\n\nDeviceLink\x12\n\n\x02id\x18\x01 \x01(\r\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x0e\n\x06groups\x18\x03 \x03(\t\x12\x14\n\x05links\x18\x04 \x03(\x0b\x32\x05.Link\"S\n\x08NodeLink\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0b\n\x03msg\x18\x02 \x01(\t\x12\x0c\n\x04logs\x18\x03 \x03(\t\x12\x1e\n\tdev_links\x18\x04 \x03(\x0b\x32\x0b.DeviceLinkb\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)



_LINK_TYPE = _descriptor.EnumDescriptor(
  name='Type',
  full_name='Link.Type',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UPDATE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='COMMAND', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=128,
  serialized_end=159,
)
_sym_db.RegisterEnumDescriptor(_LINK_TYPE)


_LINK = _descriptor.Descriptor(
  name='Link',
  full_name='Link',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='Link.type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='id', full_name='Link.id', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='Link.name', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='group', full_name='Link.group', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sigs', full_name='Link.sigs', index=4,
      number=5, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='args', full_name='Link.args', index=5,
      number=6, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _LINK_TYPE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=25,
  serialized_end=159,
)


_DEVICELINK = _descriptor.Descriptor(
  name='DeviceLink',
  full_name='DeviceLink',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='DeviceLink.id', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='DeviceLink.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='groups', full_name='DeviceLink.groups', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='links', full_name='DeviceLink.links', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=161,
  serialized_end=237,
)


_NODELINK = _descriptor.Descriptor(
  name='NodeLink',
  full_name='NodeLink',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='NodeLink.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='msg', full_name='NodeLink.msg', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='logs', full_name='NodeLink.logs', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dev_links', full_name='NodeLink.dev_links', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=239,
  serialized_end=322,
)

_LINK.fields_by_name['type'].enum_type = _LINK_TYPE
_LINK_TYPE.containing_type = _LINK
_DEVICELINK.fields_by_name['links'].message_type = _LINK
_NODELINK.fields_by_name['dev_links'].message_type = _DEVICELINK
DESCRIPTOR.message_types_by_name['Link'] = _LINK
DESCRIPTOR.message_types_by_name['DeviceLink'] = _DEVICELINK
DESCRIPTOR.message_types_by_name['NodeLink'] = _NODELINK

Link = _reflection.GeneratedProtocolMessageType('Link', (_message.Message,), dict(
  DESCRIPTOR = _LINK,
  __module__ = 'smartlink.link_pb2'
  # @@protoc_insertion_point(class_scope:Link)
  ))
_sym_db.RegisterMessage(Link)

DeviceLink = _reflection.GeneratedProtocolMessageType('DeviceLink', (_message.Message,), dict(
  DESCRIPTOR = _DEVICELINK,
  __module__ = 'smartlink.link_pb2'
  # @@protoc_insertion_point(class_scope:DeviceLink)
  ))
_sym_db.RegisterMessage(DeviceLink)

NodeLink = _reflection.GeneratedProtocolMessageType('NodeLink', (_message.Message,), dict(
  DESCRIPTOR = _NODELINK,
  __module__ = 'smartlink.link_pb2'
  # @@protoc_insertion_point(class_scope:NodeLink)
  ))
_sym_db.RegisterMessage(NodeLink)


# @@protoc_insertion_point(module_scope)
